{"ast":null,"code":"var _jsxFileName = \"D:\\\\EPAM\\\\Gd-FD3-22-25_Bolbotunov\\\\hw2-attendance-chart\\\\src\\\\components\\\\CreateTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CreateCell from './CreateCell';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateTable() {\n  _s();\n  let getDates = (() => {\n    const datesArray = ['names / dates'];\n    let today = new Date();\n    for (let i = 0; i < 5; i++) {\n      let newDay = new Date(today);\n      newDay.setDate(today.getDate() + i);\n      const year = newDay.getFullYear();\n      const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\n      const day = newDay.getDate().toString().padStart(2, '0');\n      datesArray.push(`${day}/${month}/${year}`);\n    }\n    return datesArray;\n  })();\n  const LOCAL_STORAGE_KEY = 'PASS';\n  const countCells = 5;\n  const [students, setStudents] = useState(() => {\n    const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return storedStudents ? JSON.parse(storedStudents) : [];\n  });\n\n  // function addStudent() {\n  //     const studentName = prompt('Enter student name');\n  //     if (studentName) {\n  //         setStudents(prev => {\n  //             const updatedStudents = [...prev, studentName];\n  //             localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(updatedStudents));\n  //             return updatedStudents;\n  //         });\n  //     }\n  // }\n\n  function addStudent() {\n    const studentName = prompt('Enter student name');\n    if (studentName) {\n      setStudents(prev => {\n        const updatedStudents = [...prev, studentName];\n        return updatedStudents;\n      });\n    }\n  }\n  function saveStudents() {\n    // const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(updatedStudents));\n    console.log(updatedStudents);\n    // if (storedStudents) {\n    //     setStudents(JSON.parse(storedStudents));\n    // }\n    // }\n  }\n\n  //   useEffect(() => {\n  //         console.log(students)\n  //     }, [students]);\n\n  // useEffect(() => {\n  //     const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\n  //     if (storedStudents) {\n  //         setStudents(JSON.parse(storedStudents));\n  //     }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: getDates.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), students.length > 0 && students.map((item, indexStud) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), Array.from({\n          length: countCells\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(CreateCell, {\n          id: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))]\n      }, indexStud, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: addStudent,\n          children: \"Add student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: saveStudents,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CreateTable, \"AIqZjOgA2pNt3IyM9iB6u3y7pN8=\");\n_c = CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useState","CreateCell","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateTable","_s","getDates","datesArray","today","Date","i","newDay","setDate","getDate","year","getFullYear","month","getMonth","toString","padStart","day","push","LOCAL_STORAGE_KEY","countCells","students","setStudents","storedStudents","localStorage","getItem","JSON","parse","addStudent","studentName","prompt","prev","updatedStudents","saveStudents","setItem","stringify","console","log","children","className","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","length","indexStud","Array","from","_","id","style","padding","onClick","_c","$RefreshReg$"],"sources":["D:/EPAM/Gd-FD3-22-25_Bolbotunov/hw2-attendance-chart/src/components/CreateTable.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CreateCell from './CreateCell';\r\n\r\nexport default function CreateTable() {\r\n    let getDates = (() => {\r\n        const datesArray = ['names / dates'];\r\n        let today = new Date();\r\n        for (let i = 0; i < 5; i++) {\r\n            let newDay = new Date(today);\r\n            newDay.setDate(today.getDate() + i);\r\n            const year = newDay.getFullYear();\r\n            const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\r\n            const day = newDay.getDate().toString().padStart(2, '0');\r\n            datesArray.push(`${day}/${month}/${year}`);\r\n        }\r\n        return datesArray;\r\n    })();\r\n\r\n    type StudentsList = string[];\r\n    const LOCAL_STORAGE_KEY = 'PASS';\r\n    const countCells: number = 5;\r\n\r\n    const [students, setStudents] = useState<StudentsList>(() => {\r\n        const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        return storedStudents ? JSON.parse(storedStudents) : [];\r\n    });\r\n\r\n    // function addStudent() {\r\n    //     const studentName = prompt('Enter student name');\r\n    //     if (studentName) {\r\n    //         setStudents(prev => {\r\n    //             const updatedStudents = [...prev, studentName];\r\n    //             localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(updatedStudents));\r\n    //             return updatedStudents;\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    function addStudent() {\r\n        const studentName = prompt('Enter student name');\r\n        if (studentName) {\r\n            setStudents(prev => {\r\n                const updatedStudents = [...prev, studentName];\r\n                return updatedStudents;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    function saveStudents() {\r\n        // const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(updatedStudents));\r\n        console.log(updatedStudents)\r\n        // if (storedStudents) {\r\n        //     setStudents(JSON.parse(storedStudents));\r\n        // }\r\n        // }\r\n    }\r\n\r\n\r\n//   useEffect(() => {\r\n//         console.log(students)\r\n//     }, [students]);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    //     if (storedStudents) {\r\n    //         setStudents(JSON.parse(storedStudents));\r\n    //     }\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper flex\">\r\n                <div className='row'>\r\n                    {getDates.map((item, index) => (\r\n                        <div className='cell' key={index}>{item}</div>\r\n                    ))}\r\n                </div>\r\n                {students.length > 0 && students.map((item, indexStud) => (\r\n                    <div className='row' key={indexStud}>\r\n                        <div className='cell'>{item}</div>\r\n                        {Array.from({ length: countCells }).map((_, index) => (\r\n                            <CreateCell key={index} id={index} />\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n\r\n                <div style={{ padding: '20px' }}>\r\n                    <button className='btn' onClick={addStudent}>Add student</button>\r\n                    <button className='btn'>Add date</button>\r\n                </div>\r\n                <div style={{ padding: '20px'}}>\r\n                    <button className='save-btn' onClick={saveStudents}>Save</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}