{"ast":null,"code":"var _jsxFileName = \"D:\\\\EPAM\\\\Gd-FD3-22-25_Bolbotunov\\\\my-app\\\\src\\\\components\\\\LocalStorageTest.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LocalStorageTest() {\n  _s();\n  const [someData, setSomeData] = useState('');\n  const [getData, setgetData] = useState('');\n  function clickFn() {\n    localStorage.setItem('key', someData);\n    console.log(someData);\n  }\n  function changeFn(e) {\n    setSomeData(e.target.value);\n  }\n  function showFn() {\n    let a = localStorage.getItem('key');\n    setgetData(a);\n    return getData;\n  }\n  useEffect(() => {}, [someData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '30px',\n          margin: '20px',\n          width: '150px'\n        },\n        onClick: clickFn,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          height: '30px',\n          width: '350px',\n          backgroundColor: 'silver',\n          border: '1px solid red'\n        },\n        type: \"text\",\n        onChange: changeFn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '30px',\n          margin: '20px',\n          width: '150px'\n        },\n        onClick: showFn,\n        children: \"Show LS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Output from LS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(LocalStorageTest, \"0Vha8uI9hHSmisPRW2evCABmntU=\");\n_c = LocalStorageTest;\nvar _c;\n$RefreshReg$(_c, \"LocalStorageTest\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LocalStorageTest","_s","someData","setSomeData","getData","setgetData","clickFn","localStorage","setItem","console","log","changeFn","e","target","value","showFn","a","getItem","children","style","height","margin","width","onClick","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","border","type","onChange","_c","$RefreshReg$"],"sources":["D:/EPAM/Gd-FD3-22-25_Bolbotunov/my-app/src/components/LocalStorageTest.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\n\r\nexport default function LocalStorageTest() {\r\n    const [someData, setSomeData] = useState('')\r\n    const [getData, setgetData] = useState('')\r\n\r\n    \r\n    function clickFn() {\r\n        localStorage.setItem('key', someData)\r\n        console.log(someData)\r\n    }\r\n\r\n    function changeFn(e: React.ChangeEvent<HTMLInputElement>) {\r\n       setSomeData(e.target.value)\r\n    }\r\n\r\n    function showFn() {\r\n        let a = localStorage.getItem('key')\r\n        setgetData(a)\r\n        return getData\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [someData])\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <button style={{\r\n                height:'30px',\r\n                margin:'20px',\r\n                width:'150px'\r\n            }} onClick = {clickFn}>Save</button>\r\n        <input style = {{\r\n            height: '30px',\r\n            width: '350px',\r\n            backgroundColor: 'silver',\r\n            border: '1px solid red'\r\n        }} type='text' onChange={changeFn}/>\r\n         <button style={{\r\n                height:'30px',\r\n                margin:'20px',\r\n                width:'150px'\r\n            }} onClick = {showFn}>Show LS</button>\r\n        <div><p>Output from LS:</p></div>\r\n        </div></>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG1C,SAASW,OAAOA,CAAA,EAAG;IACfC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEN,QAAQ,CAAC;IACrCO,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;EACzB;EAEA,SAASS,QAAQA,CAACC,CAAsC,EAAE;IACvDT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B;EAEA,SAASC,MAAMA,CAAA,EAAG;IACd,IAAIC,CAAC,GAAGT,YAAY,CAACU,OAAO,CAAC,KAAK,CAAC;IACnCZ,UAAU,CAACW,CAAC,CAAC;IACb,OAAOZ,OAAO;EAClB;EAEAV,SAAS,CAAC,MAAM,CAChB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAGd,oBACIL,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACArB,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAQsB,KAAK,EAAE;UACXC,MAAM,EAAC,MAAM;UACbC,MAAM,EAAC,MAAM;UACbC,KAAK,EAAC;QACV,CAAE;QAACC,OAAO,EAAIjB,OAAQ;QAAAY,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxC9B,OAAA;QAAOsB,KAAK,EAAI;UACZC,MAAM,EAAE,MAAM;UACdE,KAAK,EAAE,OAAO;UACdM,eAAe,EAAE,QAAQ;UACzBC,MAAM,EAAE;QACZ,CAAE;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEpB;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnC9B,OAAA;QAAQsB,KAAK,EAAE;UACRC,MAAM,EAAC,MAAM;UACbC,MAAM,EAAC,MAAM;UACbC,KAAK,EAAC;QACV,CAAE;QAACC,OAAO,EAAIR,MAAO;QAAAG,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C9B,OAAA;QAAAqB,QAAA,eAAKrB,OAAA;UAAAqB,QAAA,EAAG;QAAe;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC,gBAAE,CAAC;AAEjB;AAAC1B,EAAA,CA9CuBD,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}