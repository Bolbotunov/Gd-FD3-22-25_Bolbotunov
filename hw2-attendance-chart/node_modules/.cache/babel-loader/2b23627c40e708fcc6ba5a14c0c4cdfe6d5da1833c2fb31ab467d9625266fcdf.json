{"ast":null,"code":"var _jsxFileName = \"D:\\\\EPAM\\\\Gd-FD3-22-25_Bolbotunov\\\\hw2-attendance-chart\\\\src\\\\components\\\\CreateDates.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const countCells = 0;\nexport const getDates = (() => {\n  const datesArray = ['Имена/Даты'];\n  let today = new Date();\n  for (let i = 0; i < countCells; i++) {\n    let newDay = new Date(today);\n    newDay.setDate(today.getDate() + i);\n    const year = newDay.getFullYear();\n    const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\n    const day = newDay.getDate().toString().padStart(2, '0');\n    datesArray.push(`${year}/${month}/${day}`);\n  }\n  return datesArray;\n})();\nexport function CreateDates({\n  count\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: getDates.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell\",\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = CreateDates;\nvar _c;\n$RefreshReg$(_c, \"CreateDates\");","map":{"version":3,"names":["countCells","getDates","datesArray","today","Date","i","newDay","setDate","getDate","year","getFullYear","month","getMonth","toString","padStart","day","push","CreateDates","count","_jsxDEV","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/EPAM/Gd-FD3-22-25_Bolbotunov/hw2-attendance-chart/src/components/CreateDates.tsx"],"sourcesContent":["export  const countCells: number = 0;\r\n\r\nexport const getDates = (() => {\r\n    const datesArray = ['Имена/Даты'];\r\n    let today = new Date();\r\n    for (let i = 0; i < countCells; i++) {\r\n        let newDay = new Date(today);\r\n        newDay.setDate(today.getDate() + i);\r\n        const year = newDay.getFullYear();\r\n        const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\r\n        const day = newDay.getDate().toString().padStart(2, '0');\r\n        datesArray.push(`${year}/${month}/${day}`);\r\n    }\r\n    return datesArray;\r\n})();\r\n\r\nexport function CreateDates({count}) {\r\n    return (\r\n        <div className='row'>\r\n            {getDates.map((item, index) => (\r\n                <div className='cell' key={index}>{item}</div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAQ,MAAMA,UAAkB,GAAG,CAAC;AAEpC,OAAO,MAAMC,QAAQ,GAAG,CAAC,MAAM;EAC3B,MAAMC,UAAU,GAAG,CAAC,YAAY,CAAC;EACjC,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;IACjC,IAAIC,MAAM,GAAG,IAAIF,IAAI,CAACD,KAAK,CAAC;IAC5BG,MAAM,CAACC,OAAO,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;IACnC,MAAMI,IAAI,GAAGH,MAAM,CAACI,WAAW,CAAC,CAAC;IACjC,MAAMC,KAAK,GAAG,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjE,MAAMC,GAAG,GAAGT,MAAM,CAACE,OAAO,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACxDZ,UAAU,CAACc,IAAI,CAAC,GAAGP,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE,CAAC;EAC9C;EACA,OAAOb,UAAU;AACrB,CAAC,EAAE,CAAC;AAEJ,OAAO,SAASe,WAAWA,CAAC;EAACC;AAAK,CAAC,EAAE;EACjC,oBACIC,OAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBL,OAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAcE;IAAI,GAAZC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GAReZ,WAAW;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}