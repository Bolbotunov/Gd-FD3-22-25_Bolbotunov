{"ast":null,"code":"var _jsxFileName = \"D:\\\\EPAM\\\\Gd-FD3-22-25_Bolbotunov\\\\hw2-attendance-chart\\\\src\\\\components\\\\CreateTable.tsx\",\n  _s = $RefreshSig$();\nimport '../createTable.css';\nimport { useState, useEffect } from 'react';\nimport CreateCell from './CreateCell';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateTable() {\n  _s();\n  let getDates = (() => {\n    const datesArray = ['names / dates'];\n    let today = new Date();\n    for (let i = 0; i < 5; i++) {\n      let newDay = new Date(today);\n      newDay.setDate(today.getDate() + i);\n      const year = newDay.getFullYear();\n      const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\n      const day = newDay.getDate().toString().padStart(2, '0');\n      datesArray.push(`${day}/${month}/${year}`);\n    }\n    return datesArray;\n  })();\n  const LOCAL_STORAGE_KEY = 'PASS';\n  const countCells = 5;\n  const [students, setStudents] = useState(() => {\n    const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return storedStudents ? JSON.parse(storedStudents) : [];\n  });\n  const [studentsList, setStudentsList] = useState([]);\n  function addStudent() {\n    const studentName = prompt('Enter student name');\n    if (studentName) {\n      setStudents(prev => [...prev, studentName]);\n    } else {\n      return null;\n    }\n  }\n  function showStudent() {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (data) {\n      const parsedData = JSON.parse(data);\n      setStudentsList(parsedData);\n    }\n  }\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(students));\n    showStudent();\n  }, [students]);\n\n  // useEffect(() => {\n  //     const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY)\n  //     if (storedStudents) {\n  //         setStudentsList(JSON.parse(storedStudents))\n  //     }\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: getDates.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: students.map(item => {\n            return item;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), Array.from({\n          length: countCells\n        }).map((_, index) => {\n          return /*#__PURE__*/_jsxDEV(CreateCell, {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: addStudent,\n          children: \"Add student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: studentsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CreateTable, \"eOHV6z9t2z1OR9Ks2D4BboNl+sk=\");\n_c = CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["useState","useEffect","CreateCell","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateTable","_s","getDates","datesArray","today","Date","i","newDay","setDate","getDate","year","getFullYear","month","getMonth","toString","padStart","day","push","LOCAL_STORAGE_KEY","countCells","students","setStudents","storedStudents","localStorage","getItem","JSON","parse","studentsList","setStudentsList","addStudent","studentName","prompt","prev","showStudent","data","parsedData","setItem","stringify","children","className","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","style","padding","onClick","_c","$RefreshReg$"],"sources":["D:/EPAM/Gd-FD3-22-25_Bolbotunov/hw2-attendance-chart/src/components/CreateTable.tsx"],"sourcesContent":["import '../createTable.css';\r\nimport { useState, useEffect } from 'react';\r\nimport CreateCell from './CreateCell';\r\n\r\nexport default function CreateTable() {\r\n    let getDates = (() => {\r\n        const datesArray = ['names / dates']\r\n        let today = new Date()\r\n        for (let i = 0; i < 5; i++) {\r\n            let newDay = new Date(today)\r\n            newDay.setDate(today.getDate() + i)\r\n            const year = newDay.getFullYear();\r\n            const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\r\n            const day = newDay.getDate().toString().padStart(2, '0');\r\n            datesArray.push(`${day}/${month}/${year}`)\r\n        }\r\n        return datesArray;\r\n    })()\r\n\r\n\r\n    type StudentsList = string[]\r\n    const LOCAL_STORAGE_KEY = 'PASS'\r\n    const countCells: number = 5\r\n    const [students, setStudents] = useState<StudentsList>(() => {\r\n        const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        return storedStudents ? JSON.parse(storedStudents) : []\r\n    })\r\n    const [studentsList, setStudentsList] = useState<StudentsList>([]);\r\n    \r\n\r\n    function addStudent() {\r\n       \r\n        const studentName = prompt('Enter student name');\r\n        if (studentName) {\r\n            setStudents(prev => [...prev, studentName])\r\n        } else {\r\n            return null\r\n        }\r\n\r\n    }\r\n\r\n    function showStudent() {\r\n        const data = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n        if (data) {\r\n            const parsedData = JSON.parse(data)\r\n            setStudentsList(parsedData)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(students))\r\n        showStudent()\r\n    }, [students])\r\n\r\n    // useEffect(() => {\r\n    //     const storedStudents = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n    //     if (storedStudents) {\r\n    //         setStudentsList(JSON.parse(storedStudents))\r\n    //     }\r\n    // }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper flex\">\r\n                <div className='row'>\r\n                    {getDates.map((item, index) => {\r\n                        return (<div className='cell' key={index}>{item}</div>)\r\n                    })}\r\n                </div>\r\n\r\n                <div className='row'>\r\n            <div className='cell'>{students.map((item) => {\r\n                return item;\r\n            })}</div>\r\n            {Array.from({length: countCells}).map((_, index) => {\r\n                return <CreateCell key = {index}/>\r\n            })}\r\n        </div>\r\n\r\n                <div style ={{\r\n                    padding:'20px'\r\n                }}>\r\n                    <button className='btn' onClick={addStudent}>Add student</button>\r\n                    <button className='btn'>Add date</button>\r\n                    <p>{studentsList}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}