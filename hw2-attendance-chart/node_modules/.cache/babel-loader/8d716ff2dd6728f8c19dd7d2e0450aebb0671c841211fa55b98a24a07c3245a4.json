{"ast":null,"code":"var _jsxFileName = \"D:\\\\EPAM\\\\Gd-FD3-22-25_Bolbotunov\\\\hw2-attendance-chart\\\\src\\\\components\\\\CreateTable.tsx\",\n  _s = $RefreshSig$();\nimport '../createTable.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateTable() {\n  _s();\n  let getDates = (() => {\n    const datesArray = ['names / dates'];\n    let today = new Date();\n    for (let i = 0; i < 5; i++) {\n      let newDay = new Date(today);\n      newDay.setDate(today.getDate() + i);\n      const year = newDay.getFullYear();\n      const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\n      const day = newDay.getDate().toString().padStart(2, '0');\n      datesArray.push(`${day}/${month}/${year}`);\n    }\n    return datesArray;\n  })();\n  const [students, setStudents] = useState([]);\n  const [studentsList, setStudentsList] = useState([]);\n  const LOCAL_STORAGE_KEY = 'PASS';\n  function addStudent() {\n    const countCells = 5;\n    const studentName = prompt('Enter student name');\n    if (studentName) {\n      setStudents(prev => [...prev, studentName]);\n    } else {\n      return null;\n    }\n    // return (\n    // <div className='row'>\n    //     {/* <div className='cell'>{students.map((item) => {\n    //         return item;\n    //     })}</div>\n    //     {Array.from({length: countCells}).map((_, index) => {\n    //         return <CreateCell key = {index}/>\n    //     })} */}\n    // </div>\n    // )\n  }\n  function showStudents() {\n    try {\n      const studentsList = localStorage.getItem(LOCAL_STORAGE_KEY);\n      if (studentsList) {\n        setStudentsList(JSON.parse(studentsList));\n      }\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(students));\n  }, [students]);\n  console.log(students);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: getDates.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: addStudent,\n          children: \"Add student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: showStudents,\n          children: \"Add date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: studentsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CreateTable, \"y2RzZWEubziYU2GZkhUXTqUi2Ig=\");\n_c = CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateTable","_s","getDates","datesArray","today","Date","i","newDay","setDate","getDate","year","getFullYear","month","getMonth","toString","padStart","day","push","students","setStudents","studentsList","setStudentsList","LOCAL_STORAGE_KEY","addStudent","countCells","studentName","prompt","prev","showStudents","localStorage","getItem","JSON","parse","error","console","log","setItem","stringify","children","className","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onClick","_c","$RefreshReg$"],"sources":["D:/EPAM/Gd-FD3-22-25_Bolbotunov/hw2-attendance-chart/src/components/CreateTable.tsx"],"sourcesContent":["import '../createTable.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function CreateTable() {\r\n    let getDates = (() => {\r\n        const datesArray = ['names / dates']\r\n        let today = new Date()\r\n        for (let i = 0; i < 5; i++) {\r\n            let newDay = new Date(today)\r\n            newDay.setDate(today.getDate() + i)\r\n            const year = newDay.getFullYear();\r\n            const month = (newDay.getMonth() + 1).toString().padStart(2, '0');\r\n            const day = newDay.getDate().toString().padStart(2, '0');\r\n            datesArray.push(`${day}/${month}/${year}`)\r\n        }\r\n        return datesArray;\r\n    })()\r\n\r\n\r\n    type StudentsList = string[]\r\n    const [students, setStudents] = useState<StudentsList>([]);\r\n    const [studentsList, setStudentsList] = useState<StudentsList>([]);\r\n    const LOCAL_STORAGE_KEY = 'PASS'\r\n\r\n\r\n    function addStudent() {\r\n        const countCells: number = 5\r\n        const studentName = prompt('Enter student name');\r\n        if (studentName) {\r\n            setStudents(prev => [...prev, studentName])\r\n        } else {\r\n            return null\r\n        }\r\n        // return (\r\n        // <div className='row'>\r\n        //     {/* <div className='cell'>{students.map((item) => {\r\n        //         return item;\r\n        //     })}</div>\r\n        //     {Array.from({length: countCells}).map((_, index) => {\r\n        //         return <CreateCell key = {index}/>\r\n        //     })} */}\r\n        // </div>\r\n        // )\r\n    }\r\n\r\n    function showStudents() {\r\n        try {\r\n            const studentsList = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n            if(studentsList) {\r\n                setStudentsList(JSON.parse(studentsList))\r\n            }\r\n        } catch (error) {\r\n            console.log('error' , error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(students))\r\n    }, [students])\r\n\r\n    console.log(students)\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper flex\">\r\n                <div className='row'>\r\n                    {getDates.map((item, index) => {\r\n                        return (<div className='cell' key={index}>{item}</div>)\r\n                    })}\r\n                </div>\r\n\r\n\r\n                <div style ={{\r\n                    padding:'20px'\r\n                }}>\r\n                    <button className='btn' onClick={addStudent}>Add student</button>\r\n                    <button className='btn' onClick={showStudents}>Add date</button>\r\n                    <p>{studentsList}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}